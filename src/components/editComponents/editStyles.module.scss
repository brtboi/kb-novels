@import "../../variables.scss";

button {
   background-color: transparent;
   outline: none;
   font-family: inherit;
   font-size: inherit;
   font-weight: inherit;
   color: inherit;
   cursor: pointer;
}

.Button {
   height: 100%;
   aspect-ratio: 1;
   display: flex;
   flex-direction: row;
   border-radius: 1rem;
   justify-content: space-around;
   align-items: center;
   overflow: hidden;
   background-color: $backgroundColor;
   transition: background-color 200ms;
   fill: $fontColor;
}

.SettingsButton {
   @extend .Button;

   &:hover {
      background-color: $hoverColor;
      transition: all 200ms;
   }

   &.toggleOn {
      background-color: $primaryColor;
   }
}

.ReorderButton {
   @extend .Button;

   cursor: grab;
   fill: $hoverColor;

   &:hover {
      fill: $fontColor;
   }

   &:active {
      cursor: grabbing;
   }
}

.CollapseButton {
   position: relative;
   height: 100%;
   width: 24px;
   fill: $hoverColor;

   display: flex;
   flex-direction: column;
   align-items: center;

   .CollapseButtonBracket {
      width: 2px;
      flex: 1;
      background-color: $hoverColor;

      &::after {
         content: "";
         position: absolute;
         width: 10px;
         height: 2px;
         bottom: 0;
         background-color: inherit;
      }
   }

   &.collapsed {
      .CollapseButtonBracket {
         display: none;
      }
   }

   &:hover {
      fill: $fontColor;

      .CollapseButtonBracket {
         background-color: $fontColor;
      }
   }
}

.Input {
   background-color: transparent;
   font-family: inherit;
   font-size: inherit;
   font-weight: inherit;
   color: inherit;

   &:hover {
      text-decoration: underline;
   }
}

textarea {
   resize: none;
   field-sizing: content;
}

.Icon {
   fill: inherit;
   stroke: inherit;
   stroke-width: inherit;
}

.AddButton {
   display: flex;
   flex-direction: row;
   background-color: $primaryColor;
   transition: background-color 100ms ease-in;
   border-radius: 1rem;
   overflow: hidden;
   justify-content: center;
   align-items: center;
   color: $backgroundColor;
   fill: $backgroundColor;
   stroke: $backgroundColor;

   &:hover {
      background-color: $fontColor;
      transition: background-color 100ms ease-in;
   }
}

.CardsHeader {
   display: flex;
   flex-direction: row;
   gap: 1rem;

   .SortMenu {
      position: absolute;
      z-index: 9999;
      left: 10rem;
      
      display: flex;
      flex-direction: column;
      border: 4px solid $fontColor;
      border-radius: 1rem;
      background-color: $backgroundColor;

      .SortMenuRow {
         display: flex;
         flex-direction: row;
         justify-content: space-between;

         .SortMenuButtons {
            display: flex;
            flex-direction: row;
         }
      }
   }
}

.Card {
   display: flex;
   flex-direction: row;
   gap: 5px;

   .CardSidePanel {
      display: flex;

      .ReorderButton {
         height: 24px;
         width: 24px;
      }
   }

   .CardBody {
      width: 100%;
      display: flex;
      flex-direction: column;

      .CardHeader {
         display: flex;
         align-items: center;
      }

      .CardCategoriesDiv {
         width: 100%;
         margin-top: 1rem;
         display: flex;
         flex-direction: column;
         gap: 1rem;
      }
   }

   .AddCategoryDiv {
      margin-top: 5px;
      display: flex;
      font-size: 18px;

      .AddCategoryButton {
         &:hover {
            text-decoration: underline;
         }
      }
   }
}

.CardCategory {
   $topPadding: 1.5rem;

   position: relative;
   display: flex;
   flex-direction: column;
   gap: 1rem;
   border: 4px solid $fontColor;
   padding: $topPadding 2rem;
   border-radius: 1rem;
   overflow: visible;

   .CategoryHeader {
      position: absolute;
      transform: translateY(-$topPadding) translateY(-2px) translateY(-50%);
      left: 0;
      right: 0;
      z-index: 10;
      height: 2rem;
      margin: 0;
      padding: 0 2rem;

      display: flex;
      flex-direction: row;
      justify-content: space-between;
      align-items: center;

      overflow: visible;

      fill: $fontColor;

      .CategoryNameDiv {
         padding: 0 1rem;

         display: flex;
         align-items: center;
         background-color: $backgroundColor;

         .CategoryName {
            /* width controlled in EditCategory.tsx */
            margin: 0;
         }
      }

      .AddButton {
         position: absolute;
         left: 50%;
         transform: translateX(-50%);
         padding: 0 1rem;
      }

      .CategorySettingsDiv {
         height: 1rem;
         display: flex;
         flex-direction: row;
         gap: 1rem;
         height: 100%;
         border: $fontColor solid 4px;
         border-radius: 10rem;
         padding: 0 1rem;
         background-color: $backgroundColor;
         overflow: hidden;
      }

      .DependenciesDrawer {
         position: absolute;
         min-width: 11rem;
         top: 2.5rem;
         right: 2rem;
         border: 4px solid $fontColor;
         border-radius: 1rem;
         padding: $marginSize;

         background: $backgroundColor;
         display: flex;
         flex-direction: column;
         overflow: visible;

         &::before {
            content: "";
            position: absolute;
            z-index: -1;
            width: 1rem;
            height: 1rem;
            transform: translate(0, -1rem) rotate(45deg);
            background-color: $fontColor;
         }

         .DependenciesRow {
            display: flex;
            flex-direction: row;
            align-items: center;
         }
      }
   }
}

.CardRow {
   height: fit-content;
   display: flex;
   flex-direction: row;
   gap: 1rem;

   .LabelDiv {
      flex: 1;
      display: flex;
      justify-content: flex-end;
      align-items: center;
      height: fit-content;
      padding: 2px;

      .Label {
         text-align: right;
      }

      .LabelColon {
         display: flex;
         justify-content: center;
         align-items: center;
      }
   }

   .AnswerDiv {
      flex: 2.2;
      display: flex;
      flex-direction: column;
      gap: 0.5rem;

      .AnswerRow {
         display: flex;
         flex-direction: row;
         align-items: center;
         gap: 0.5rem;

         .Answer {
            width: 100%;
            border: $fontColor solid 2px;

            &:hover {
               text-decoration: none;
            }
         }

         .AddAnswerDiv {
            height: 100%;
         }
      }

      .AddButton {
         width: 2rem;
         height: 2rem;
      }

      .DeleteAnswerButton {
         @extend .SettingsButton;

         width: 2rem;
         height: 2rem;
         align-self: center;
      }
   }

   .RowSettingsDivDiv {
      flex: 1;
      display: flex;
      justify-content: flex-end;

      .RowSettingsDiv {
         right: 2rem;
         height: 2rem;
         padding: 0 1rem 0 0;
         display: flex;
         justify-content: right;

         border: $fontColor solid 4px;
         border-radius: 10rem;

         display: flex;
         flex-direction: row;
         gap: 1rem;

         .SettingsButton {
            height: 1.5rem;
            width: 1.5rem;
         }

         .RowTypeDiv {
            width: auto;
            display: flex;
            gap: 1rem;
            justify-content: right;

            .SettingsButton.toggleOn {
               z-index: 1;
            }
         }
      }
   }
}
